//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\PAA\ANTLR project\TryAntlrAgain\TryAntlrAgain\calculator.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace TryAntlrAgain {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IcalculatorListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class calculatorBaseListener : IcalculatorListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.booleanAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanAtom([NotNull] calculatorParser.BooleanAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.booleanAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanAtom([NotNull] calculatorParser.BooleanAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.addSubExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddSubExpr([NotNull] calculatorParser.AddSubExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.addSubExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddSubExpr([NotNull] calculatorParser.AddSubExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.and_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_stat([NotNull] calculatorParser.And_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.and_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_stat([NotNull] calculatorParser.And_statContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.atomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomExpr([NotNull] calculatorParser.AtomExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.atomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomExpr([NotNull] calculatorParser.AtomExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] calculatorParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] calculatorParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.condition_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition_block([NotNull] calculatorParser.Condition_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.condition_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition_block([NotNull] calculatorParser.Condition_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] calculatorParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.relationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] calculatorParser.RelationalExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.numberAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberAtom([NotNull] calculatorParser.NumberAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.numberAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberAtom([NotNull] calculatorParser.NumberAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.leftstat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftstat_block([NotNull] calculatorParser.Leftstat_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.leftstat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftstat_block([NotNull] calculatorParser.Leftstat_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.parExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParExpr([NotNull] calculatorParser.ParExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.parExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParExpr([NotNull] calculatorParser.ParExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.stringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringAtom([NotNull] calculatorParser.StringAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.stringAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringAtom([NotNull] calculatorParser.StringAtomContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.rightstat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightstat_block([NotNull] calculatorParser.Rightstat_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.rightstat_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightstat_block([NotNull] calculatorParser.Rightstat_blockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.ifExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpr([NotNull] calculatorParser.IfExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.ifExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpr([NotNull] calculatorParser.IfExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] calculatorParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] calculatorParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.if_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_stat([NotNull] calculatorParser.If_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.if_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_stat([NotNull] calculatorParser.If_statContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.or_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_stat([NotNull] calculatorParser.Or_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.or_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_stat([NotNull] calculatorParser.Or_statContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.mulDivExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulDivExpr([NotNull] calculatorParser.MulDivExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.mulDivExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulDivExpr([NotNull] calculatorParser.MulDivExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpr([NotNull] calculatorParser.EqualityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.equalityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpr([NotNull] calculatorParser.EqualityExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="calculatorParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] calculatorParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="calculatorParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] calculatorParser.AndExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace TryAntlrAgain
